   1 : -- File list13_13.lua -- FE analysis of Square Corner Resistor
   2 : 
   3 : require'pde2fe' 
   4 : 
   5 : nts = {readnts('list13_13')}
   6 : Un = 1 -- Normal derivative on left boundary
   7 : 
   8 : feqs = {
   9 : 	function(x,y,uxx,ux,u,uy,uyy)
  10 : 		return uxx + uyy
  11 : 	end,
  12 : 	function(nd,u,un,nbs)
  13 : 		if nbs==1 then return u -- Bottom boundary
  14 : 		elseif nbs==7 then return u -- Bottom end points
  15 : 		elseif nbs==4 then return un - Un -- Left boundary
  16 : 		else  return un end -- Sides 
  17 : 	end 
  18 : }	
  19 : 
  20 : getfenv(spgauss).nprint = 1 -- Just to see progress
  21 : getfenv(pde2fe).linear = 1 -- Saves an extra Newton iteration
  22 : u = pde2fe(feqs,nts)
  23 : 
  24 : pt = {0,1.5} -- Point at center of left boundary
  25 : print('Effective squares of corner = ',intptri(u,nts[1],nts[2],pt)-2)
  26 : x,y = {},{}; NT1 = 21; NT2 = 41 -- Arrays for plotting
  27 : for j=1,NT1 do x[j] = 1+(j-1)/(NT1-1) end 
  28 : for j=1,NT2 do y[j] = 2*(j-1)/(NT2-1) end
  29 : sol1 = toxysol(u,x,y,nts[1],nts[2]); splot(sol1)
  30 : write_data('list13_13a.dat',sol1) -- Save for 1<x<2; 0<y<2
  31 : for j=1,NT1 do x[j] = (j-1)/(NT1-1); y[j] = 1+x[j] end
  32 : sol2 = toxysol(u,x,y,nts[1],nts[2]); splot(sol2)
  33 : write_data('list13_13b.dat',sol2) -- Save for 0<x<1; 1<y<2
