   1 : -- /* File list9.19.lua */ -- Piecewise diode model 
   2 : 
   3 : requires("nlstsq","mcpar","DataFit","cltwodim")
   4 : 
   5 : infile = 'ivdata'
   6 : xd,yd = {},{}; read_data(infile..'.txt',xd,yd) -- x stored first
   7 : nd = #xd
   8 : for i=1,nd do yd[i] = math.log(yd[i]) end
   9 : 
  10 : n,m,Vt = 4,4,.0259 -- Experiment with values for best fit
  11 : ft = function(x,c) -- Define function to fit data
  12 : 	v = (x[2] - c[4]*math.exp(x[1]))/Vt
  13 : 	i12 = ((c[1]*(math.exp(v/2)-1))^n + (c[2]*math.exp(v))^n)^(1/n)
  14 : 	return math.log(((i12)^-m + (c[3]*math.exp(v/2))^-m)^-(1/m)) - x[1]
  15 : end
  16 : 
  17 : c = {5e-9,5.6e-13,8e-9,4}; nc = #c -- Initial approximations
  18 : 
  19 : del,err,nn = nlstsq({yd,xd},fw,ft,c) -- Call fiting, print max iterations 
  20 : print('Newton iterations, err =',nn,err)
  21 : for i=1,nc do printf('c[%d] = %12.4e +/- %12.4e\n',i,c[i],del[i]) end
  22 : 
  23 : ycalc,res = {},{} -- Calculate fitted values and residuals
  24 : for i=1,nd do ycalc[i] = newtonfc(ft,{yd[i],xd[i]},c); res[i] = yd[i] - ycalc[i] end
  25 : fres1,fres2 = datafit({res,xd}), datafit({res,yd}) -- Fit residuals
  26 : yres1,yres2,xyp,xypn = {},{},{},{}
  27 : for i=1,nd do yres1[i],yres2[i] = fres1(xd[i]),fres2((ycalc[i])) end
  28 : xyp[1],xyp[2] = makeCDF(res); xypn[1],xypn[2] = normalCDF(res) -- CDF data for residuals
  29 : plot(xd,yd,ycalc); plot(xd,yres2,res); plot(ycalc,yres2,res); plot(xyp,xypn) 
  30 : write_data(infile..'e.dat',xd,yd,ycalc,res,yres1,yres2,xyp,xypn)
  31 : 
