   1 : -- File list12_26.lua --
   2 : -- Example of BV problem in 2 dimensions -- rectangular grid of points
   3 : 
   4 : require"pde2bv"
   5 : Vm = 5.0 -- Define equations to be solved
   6 : pi = math.pi;pi2 = 2*pi^2; sin=math.sin
   7 : feqs = { -- Table of functions
   8 : 	function(x,y,uxx,ux,u,uy,uyy,i,j) -- General point
   9 : 		return uxx + uyy + Vm*pi2*(sin(pi*x/xmax)*sin(pi*y/ymax))^20
  10 : 	end,
  11 : 	function(x,u,uy,ux,i) return u end, -- Bottom boundary -- Zero 
  12 : 	function(x,u,uy,ux,i) return u end, -- Top boundary
  13 : 	function(y,u,ux,uy,j) return u end, -- Right boundary
  14 : 	function(y,u,ux,uy,j) return u end  -- Left boundary
  15 : }  -- End general point and boundary values
  16 : 
  17 : x,y,u = {},{},{}; xmax,ymax = 1.0,1.0 -- Try other values
  18 : Nx,Ny = 80,80
  19 : nx,ny = Nx+1,Ny+1; n = nx*ny
  20 : for i = 1,nx do x[i] = xmax*(i-1)/Nx end
  21 : for i = 1,ny do y[i] = ymax*(i-1)/Ny end
  22 : for j = 1,ny do	-- Set x,y grid of initial values
  23 : 	u[j] = {}; for i = 1,nx do u[j][i] = 0 end
  24 : end
  25 : a,b = setup2bveqs(feqs,x,y,u,1) -- Set up equations, x first numbering
  26 : 
  27 : ar,br = reorder(a,b) -- Reorder with y first numbering
  28 : 
  29 : wx,wy = 100,100 -- Set ADI factors -- Try other values
  30 : updatew(ar,wy); updatew(a,wx)
  31 : 
  32 : t = os.time()
  33 : ua = Spmat.new(nx,-ny) -- Array for solution
  34 : for j=1,ny do -- Linear array of solution values
  35 : 	for i=1,nx do ua[i+(j-1)*nx] = u[j][i] end
  36 : end	
  37 : era,ier = {},1; nadi = 50
  38 : for k=1,nadi do -- Loop over ADI solutions
  39 : 	ua,errm = trisolve(a,b,ua) -- X first labeling
  40 : 	print('k, first max corr =',k,errm);io.flush()
  41 : 	era[ier],ier = errm,ier+1
  42 : 	ua = reorder(ua) -- X first to Y first 
  43 : 	ua,errm = trisolve(ar,br,ua) --Y first labeling
  44 : 	print('k, second max corr =',k,errm);io.flush()
  45 : 	era[ier],ier = errm,ier+1
  46 : 	ua = reorder(ua) -- Y first to X first
  47 : end
  48 : print('time = ',os.time()-t)
  49 : print(' At end maximum correction =',errm)
  50 : bb = to2darray(ua) -- Convert to 2D array for plots
  51 : splot(bb); cplot(bb) -- Surface and coutour plots
  52 : write_data('list12_26.dat',bb)
  53 : write_data('list12_26a.dat',era)
  54 : 
