   1 : -- File list12_34.lua --
   2 : -- Example of BV problem for p-n junction
   3 : require"pde2bv"
   4 : -- Material and device parameters
   5 : q = 1.6e-19; eps = 11.9*8.854e-14; L = 0.4e-4
   6 : vt = .026; ni = 1.45e10
   7 : Na = 1e19; Nd = 1.e17-- Doping densities
   8 : x1,y1,x2 = L/2, L/4, L*3/4; va = 0.0
   9 : qdep = q/eps; vj = vt*math.log(Na*Nd/ni^2); no = ni^2/Na
  10 : 
  11 : feqs = {
  12 : 	function(x,y,uxx,ux,u,uy,uyy,i,j)
  13 : 		if x>=x1 and y<=y1 then Nnet = -Na
  14 : 		else Nnet = Nd end
  15 : 		p, n  = Na*math.exp(-u/vt), no*math.exp(u/vt)
  16 : 		return uxx + uyy + qdep*(Nnet + p - n)
  17 : 	end,
  18 : 	function(x,u,uy,ux,i) 
  19 : 		if x>x2 then return u-va else return uy end
  20 : 	end,
  21 : 	function(x,u,uy,ux,i) return u-vj end,
  22 : 	function(y,u,ux,uy,j) return ux end,
  23 : 	function(y,u,ux,uy,j) return ux end
  24 : }	
  25 : 	
  26 : Nx,Ny = 80,80; nx,ny = Nx+1,Ny+1
  27 : nyj = math.floor(Ny/4); nxj = math.floor(Nx/2)
  28 : x,y = setxy({0,L},{0,L},Nx,Ny)
  29 : u = Spmat.new(nx,-ny) 
  30 : for j = 1,ny do	-- Set initial values at 0 or Vj
  31 : 	yv = y[j]
  32 : 	u[j] = {}; for i = 1,nx do 
  33 : 		xv = x[i]
  34 : 		if xv>=x1 and yv<=y1 then u[j][i] = 0.0
  35 : 		else u[j][i] = vj end
  36 : 	end
  37 : end
  38 : getfenv(pde2bv).nprint = 1; --getfenv(pde2bvcoe).nprint=1
  39 : SPM,COE,SOR,ADI = 1, 2, 3, 4 -- 4 solution types 
  40 : t1 = os.clock()
  41 : u,errm = pde2bv(feqs,x,y,u,COE) -- Replace COE as desired
  42 : print('time =',os.clock()-t1)
  43 : 
  44 : pa,na = {},{}; ut = reversexy(u)
  45 : for i=1,nx do -- Calculate carrier densities
  46 : 	paa,naa = {}, {}
  47 : 	for j=1,ny do 
  48 : 		ua = ut[i][j]
  49 : 		paa[j] = math.log10(Na*math.exp(-ua/vt))
  50 : 		naa[j] = math.log10(no*math.exp(ua/vt))
  51 : 	end
  52 : 	pa[i],na[i] = paa, naa
  53 : end
  54 : splot(ut); cplot(ut); splot('list12.34.emf',ut)
  55 : write_data('list12.34u.dat',ut)
  56 : write_data('list12.34p.dat',pa); write_data('list12.34n.dat',na)
