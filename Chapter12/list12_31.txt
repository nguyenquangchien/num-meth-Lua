   1 : -- File list12_31.lua --
   2 : -- Example of BV problem for capacitor with offset bottom plate
   3 : 
   4 : require"pde2bv"
   5 : local xmax,ymax
   6 : Vm = 1
   7 : feqs = { -- Function and boundary conditions
   8 : 	function(x,y,uxx,ux,u,uy,uyy,i,j)
   9 : 		if x>x1 then
  10 : 			if y<=y1 then return u else return uxx+uyy end
  11 : 		else	return uxx + uyy end
  12 : 	end,
  13 : 	function(x,u,uy,ux,i) return u end,
  14 : 	function(x,u,uy,ux,i) return u - Vm end,
  15 : 	function(y,u,ux,uy,j) return ux end,
  16 : 	function(y,u,ux,uy,j) 
  17 : 		if y<=y1 then return u else return ux end
  18 : 	end
  19 : }
  20 : 
  21 : x,y = {},{}; Nx,Ny = 40,40
  22 : nx,ny = Nx+1,Ny+1
  23 : xmax,ymax = 5, 1
  24 : x1,y1 = xmax/2, ymax/2
  25 : for i=1,nx do x[i] = xmax*(i-1)/Nx end
  26 : for j=1,ny do y[j] = ymax*(j-1)/Ny end
  27 : u = Spmat.new(nx,-ny)
  28 : for j = 1,ny do	
  29 : 	u[j] = {}; for i = 1,nx do u[j][i] = 0 end
  30 : end
  31 : 
  32 : SPM,COE,SOR,ADI = 1, 2, 3, 4 -- 4 solution types 
  33 : getfenv(pde2bvsor).nprint=1
  34 : u,errm = pde2bv(feqs,x,y,u,SOR) -- Replace SOR as desired
  35 : ur = reversexy(u); splot(ur); cplot(ur)
  36 : ux,uy = grad(x,y,u)
  37 : sum = 0.5*(uy[ny][1] + uy[ny][nx])
  38 : for i=2,nx-1 do sum = sum + uy[ny][i] end
  39 : sum = sum*(x[2]-x[1])
  40 : print('C/eps*W =',sum)
  41 : write_data("list12_31.dat",ur); cplot("list12_31.emf",ur)
  42 : 
  43 : 
