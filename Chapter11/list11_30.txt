   1 : -- /* list11_30.lua */
   2 : -- Solution of nonlinear third order BV problem by two methods
   3 : require "odebv"; require"odefd"
   4 : getfenv(odefd).nprint=1
   5 : getfenv(odefd).umin = {1.e-3,1.e-3}
   6 : 
   7 : L = 10
   8 : f = function(eqs,x,u,up,upp) -- Equations for FD approach
   9 : 	eqs[1] = upp[1] - up[2]
  10 : 	eqs[2] = 2*upp[2] + u[1]*up[2]
  11 : end
  12 : fbl = function(eql,u,up) -- Left boundary conditions for FD
  13 : 	eql[1] = u[1] 
  14 : 	eql[2] = u[2]
  15 : end
  16 : fbr = function(eqr,u,up) -- Right boundary conditions for FD
  17 : 	eqr[1] = up[1] - u[2]
  18 : 	eqr[2] = u[2] - 1
  19 : end
  20 : 
  21 : fst = function(eqs,x,u,up) -- Equations for shooting approach
  22 : 	eqs[1] = up[1] - u[2]
  23 : 	eqs[2] = up[2] - u[3]
  24 : 	eqs[3] = 2*up[3] + u[1]*u[3]
  25 : end
  26 : fb2 = function(bv,uL,uR) -- Boundary values for shooting method
  27 : 	bv[1] = uL[1]; bv[2] = uL[2] -- Left boundary values
  28 : 	bv[3] = uR[2] -1 -- Right boundary values
  29 : end	
  30 : 
  31 : x = {0,L,2000}; u = {{0,10},{0,1}} -- FD method
  32 : s1,n1 = odefde({f,fbl,fbr},x,u); plot(s1)
  33 : x = {0,L,2000}; u = {0,0,1} -- Shooting method
  34 : s2,n2 = odebvst({fst,fb2},x,u); plot(s2); print(n1,n2)
  35 : write_data('list11_30.dat',s1,s2)
