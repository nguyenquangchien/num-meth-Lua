   1 : -- /* list11_20.lua */
   2 : -- Solution of semiconductor depletion layer as a BV problem
   3 : require"odebvfd"; exp = math.exp
   4 : 
   5 : L,Na,Nd = 2.e-5, 1e18, 1e18 -- Size and doping densities
   6 : q,eps,vt,ni = 1.6e-19, 11.9*8.854e-14, .026, 1.45e10
   7 : qdep = q/eps
   8 : v1,v2 = -vt*math.log(Na/ni), vt*math.log(Nd/ni) -- Boundary values
   9 : 
  10 : f = function(x,v,vp,vpp) -- Poisson's equation
  11 : 	if x<=0 then Nnet = -Na else Nnet = Nd end
  12 : 	return vpp + qdep*(ni*exp(-v/vt) - ni*exp(v/vt) + Nnet)
  13 : end
  14 : 
  15 : nx = 2001; dx = L/(nx-1); x,v = {},{}
  16 : for i=1,nx do -- Initial voltage approximation
  17 : 	x[i] = (i-1)*dx - L/2
  18 : 	if x[i]<0 then v[i] = v1 else v[i] = v2 end
  19 : end
  20 : s,err,nn = ode1fde(f,x,v) -- Solve equations, fixed boundary values
  21 : p,n = {},{} -- To calculate holes and electrons
  22 : for i=1,nx do -- Now calculate then
  23 : 	p[i],n[i] = ni*exp(-s[2][i]/vt),ni*exp(s[2][i]/vt) end
  24 : 
  25 : print('Number of Newton iterations = ',nn)
  26 : plot(s); plot(s[1],n);plot(s[1],p)
  27 : plot(err); write_data('list11_20.dat',s,err,n,p)
