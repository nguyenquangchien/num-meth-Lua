   1 : -- /* File list11_26.lua */ -- Solution of semiconductor device equations
   2 : 
   3 : require"odefd"
   4 : getfenv(odefd).umin = {1.e-6, 1.e-6, 1.e-6}
   5 : 
   6 : -- Material and device parameters
   7 : q = 1.6e-19; eps = 11.9*8.854e-14; L = 2.e-4
   8 : vt = .026; ni = 1.45e10
   9 : Na = 1e16; Nd = 1.e19 -- Doping densities
  10 : tno = 1.e-12; tpo = 2.e-12 -- Lifetimes
  11 : n1 = ni; p1 = ni
  12 : unp,unn = 1020, 100 -- Electron mobilities
  13 : upp,upn = 420, 50 -- Hole mobilities
  14 : qdep = q/eps; vj = vt*math.log(Na*Nd/ni^2); no = ni^2/Na
  15 : va = 0.0
  16 : 
  17 : eq = function(fv,x,v,vp,vpp)
  18 : 	if x<=0 then Nnet, un, up = -Na, unp, upp
  19 : 	else Nnet, un, up = Nd, unn, upn end
  20 : 	p, n  = Na*math.exp((v[2]-v[1])/vt), no*math.exp((v[1]-v[3])/vt)
  21 : 	U = (p*n-ni^2)/(tpo*(n+n1)+tno*(p+p1))
  22 : 	fv[1] = vpp[1] + qdep*(p - n + Nnet) -- V term - Poisson's equation
  23 : 	fv[2] = vpp[2] + vp[2]*(vp[2]-vp[1])/vt - U/(p*up)-- Up term for holes
  24 : 	fv[3] = vpp[3] + vp[3]*(vp[1]-vp[3])/vt + U/(n*un)-- Un term for electrons
  25 : end
  26 : 
  27 : efl = function(fv,v,vp) -- Left boundary values, all zero
  28 : 	fv[1], fv[2], fv[3] = v[1]-va, v[2]-va, v[3]-va
  29 : end
  30 : efr = function(fv,v,vp) -- Righr boundary values
  31 : 	fv[1], fv[2], fv[3] = v[1] - vj, v[2], v[3]
  32 : end
  33 : 
  34 : x, v, nx = {}, {}, 2001; dx = L/(nx-1)
  35 : for j=1,3 do v[j] = {} end
  36 : for i=1,nx do -- Set initial values -- step in v[1][]
  37 : 	x[i] = (i-1)*dx - 3*L/4
  38 : 	if x[i]<0 then v[1][i] = 0 else v[1][i] = vj end -- Step in potential
  39 : 	for j=2,3 do v[j][i] = 0 end -- Zero Quasi-Fermi levels
  40 : end
  41 : for i=0,11 do
  42 : 	va = i/10
  43 : 	s,nn = odefd({eq,efl,efr},x,v)
  44 : 	print('Number of iterations is ',nn,' at va = ',va); io.flush()
  45 : 	write_data('list11_26'..i..'.dat',s) -- Save solution
  46 : end
